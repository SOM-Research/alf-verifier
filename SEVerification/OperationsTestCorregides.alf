activity newPlate (in _description: String, in _substitutedPlates:Plate[*], in _type:PlateType){
	Plate p = new Plate(); 
	p.description = _description; 
      p.type = _type;
	for (i in 1.._substitutedPlates->size()) { 
		CanBeSubstitutedBy.createLink(p1=>p,p2=>_substitutedPlates[i]);
		CanBeSubstitutedBy.createLink(p2=>p,p1=>_substitutedPlates[i]); 
	}
}


activity addMenu (in _name:String, in _price:Real, in _plates:Plate[3..*]){  
	if ( !Menu.allInstances()->exists(m|m.name=_name) ){
		Menu m = new Menu(); 
		m.name = _name; 
		m.price = _price; 
		for (i in 1.._plates->size()){ 
	 		IsComposedOf.createLink(menu=>m,plate=>_plates[i]); 
		}
	}
}


activity classifyAsSpecialMenu (in _discount:Real){ 
	if ( _discount > 10 ){ 
		if ( SpecialMenu.allInstances()->size()<3 ){
			classify self to SpecialMenu; 
			self.discount = _discount;
		}
	}
}

activity classifyAsSpecialMenu2 (in _discount:Real){ 
	if ( _discount > 10 ){ 
		if (x.oclIsTypeOf(SpecialMenu)){
			x.destroy();
		}
		classify self to SpecialMenu; 
		self.discount = _discount;
	}
}

activity classifyAsSpecialMenu22(in _discount:Real){ 
	SpecialMenu x = 3;
	//inicialitzar x
	if ( _discount > 10 ){ 
		x.destroy();
		classify self to SpecialMenu; 
		self.discount = _discount;
	}
}


activity classifyAsSpecialMenu222(in _discount:Real){ 
	SpecialMenu x = new SpecialMenu();
	if ( _discount > 10 ){ 
		x.destroy();
		classify self to SpecialMenu; 
		self.discount = _discount;
	}
}

activity classifyAsSpecialMenu3 (in _discount:Real){ 
	if ( _discount > 10 ){ 
		if (x.oclIsTypeOf(SpecialMenu)){
			classify x from SpecialMenu;
		}
		classify self to SpecialMenu; 
		self.discount = _discount;
	}
}

activity provaCreateObject (){
	RestaurantBranch rb = new RestaurantBranch();
	rb.address = X;
	rb.phone = X;
	LocatedIn.createLink(restaurantBranch=>rb,city=>X);
	Offers.createLink(restaurantBranch=>rb,menu=>X);
	classify X from SpecialMenu;
	SpecialMenu sm = new SpecialMenu();
	sm.discount = X;
	sm.name = X;
	sm.price = X;
	IsComposedOf.createLink(menu=>sm,plate=>X); 
	return hola;
}

activity provaDestroyObject(){
  	if (sm.oclIsTypeOf(SpecialMenu)){
		sm.destroy();
	}
}

activity provaAddStructuralFeature_ID_Alt1(){
	if ( _discount > 10 ){
		if ( !SpecialMenu.allInstances->exists(m|m.name=_name) ){
	  		SpecialMenu sm = new SpecialMenu();
			sm.discount = _discount;
			sm.name = _name;
			sm.price = X;
			IsComposedOf.createLink(menu=>sm,plate=>p1); 
			IsComposedOf.createLink(menu=>sm,plate=>p2); 
			IsComposedOf.createLink(menu=>sm,plate=>p3); 
		}
	}
}

activity provaAddStructuralFeature_ID_Alt2(){
	if ( _discount > 10 ){
		if ( m2.name == _name ){
			m2.name=_name3;
	  		SpecialMenu sm = new SpecialMenu();
			sm.discount = _discount;
			sm.name = _name;
			sm.price = X;
			IsComposedOf.createLink(menu=>sm,plate=>p1); 
			IsComposedOf.createLink(menu=>sm,plate=>p2); 
			IsComposedOf.createLink(menu=>sm,plate=>p3); 
		}
	}
}
activity provaAddStructuralFeature_ID_Alt3(){
	if ( _discount > 10 ){
		if (m2.name == _name ){
			m2.destroy();
	  		SpecialMenu sm = new SpecialMenu();
			sm.discount = _discount;
			sm.name = _name;
			sm.price = X;
			IsComposedOf.createLink(menu=>sm,plate=>p1); 
			IsComposedOf.createLink(menu=>sm,plate=>p2); 
			IsComposedOf.createLink(menu=>sm,plate=>p3); 
		}
	}
}


activity provaCreateLink_Cmax_Alt1(){
	RestaurantBranch rb = new RestaurantBranch();
	LocatedIn.createLink(restaurantBranch=>rb,city=>c);
}

activity provaCreateLink_Cmax_Alt2(){
	if ( rb.city->size() < 1 ){
		LocatedIn.createLink(restaurantBranch=>rb,city=>c);
	}
}

activity provaCreateLink_Cmax_Alt3(){
	LocatedIn.createLink(restaurantBranch=>rb,city=>c);
	LocatedIn.destroyLink(restaurantBranch=>rb,city=>c2);
}

activity provaCreateLink_Sym(){
	CanBeSubstitutedBy.createLink(p1=>p1,p2=>p2);
}

activity provaCreateLink_Asym_Alt1(){
	if ( not p2.p2->includes(p1) ){
		CanBeSubstitutedBy.createLink(p1=>p1,p2=>p2);
	}
}

activity provaCreateLink_Asym_Alt2(){
	CanBeSubstitutedBy.createLink(p1=>p1,p2=>p2);
	CanBeSubstitutedBy.destroyLink(p1=>p2,p2=>p1);
}

activity provaCreateLink_Irrefl(){
	if (p1 != p1){
		CanBeSubstitutedBy.createLink(p1=>p1,p2=>p1);
	}
}

activity provaDestroyLink_Cmin_Alt1(){
	if ( m.plate->size()>3 ){
		IsComposedOf.destroyLink(menu=>m,plate=>p);
	}
}

activity provaDestroyLink_Cmin_Alt2(){
	IsComposedOf.destroyLink(menu=>m,plate=>p);
	IsComposedOf.createLink(menu=>m,plate=>p2);
}

activity provaDestroyLink_Cmin_Alt3(){
	IsComposedOf.destroyLink(menu=>m,plate=>p);
	m.destroy();
}

activity provaDestroyLink_Sym_Alt1(){
	CanBeSubstitutedBy.destroyLink(p1=>p1,p2=>p2);
	CanBeSubstitutedBy.destroyLink(p1=>p2,p2=>p1);
}

activity provaClearAssociation_Cmin(){
	Offers.clearAssoc(restaurantBranch);
}



